{
  "active": true,
  "connections": {
    "If toDelete": {
      "main": [
        [
          {
            "node": "Archive Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Blocks": {
      "main": [
        [
          {
            "node": "If toDelete",
            "type": "main",
            "index": 0
          },
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches": {
      "main": [
        [
          {
            "node": "Get Page Blocks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Page Blocks": {
      "main": [
        [
          {
            "node": "Process Blocks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Databases": {
      "main": [
        [
          {
            "node": "Get All Database Pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Empty Properties": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Database Pages": {
      "main": [
        [
          {
            "node": "Check for empty properties",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for empty properties": {
      "main": [
        [
          {
            "node": "If Empty Properties",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Databases",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Send error email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-04-06T03:10:55.156Z",
  "id": "2",
  "name": "Archive empty pages in Notion database ðŸ“…",
  "nodes": [
    {
      "parameters": {
        "resource": "database",
        "operation": "getAll",
        "returnAll": true
      },
      "name": "Get All Databases",
      "type": "n8n-nodes-base.notion",
      "position": [
        540,
        240
      ],
      "typeVersion": 2,
      "id": "a12e70fa-76b7-4cc1-a611-05e89cd5741b",
      "credentials": {
        "notionApi": {
          "id": "1",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": "={{$json[\"id\"]}}",
        "returnAll": true,
        "simple": false,
        "options": {}
      },
      "name": "Get All Database Pages",
      "type": "n8n-nodes-base.notion",
      "position": [
        720,
        240
      ],
      "typeVersion": 2,
      "id": "e30c9fe1-8fc5-4dd5-b6e6-27ca769f51ea",
      "credentials": {
        "notionApi": {
          "id": "1",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "block",
        "operation": "getAll",
        "blockId": "={{$json[\"id\"]}}",
        "returnAll": true
      },
      "name": "Get Page Blocks",
      "type": "n8n-nodes-base.notion",
      "position": [
        1480,
        220
      ],
      "typeVersion": 2,
      "alwaysOutputData": true,
      "id": "77d5200d-35f5-4a7c-a4d3-0f61df5742a4",
      "credentials": {
        "notionApi": {
          "id": "1",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let returnData = {\n  json: {\n    toDelete: false,\n    pageID: $node[\"SplitInBatches\"].json[\"id\"],\n  }\n};\n\nif (!items[0].json.id) {\n  returnData.json.toDelete = true;\n  return [returnData];\n}\n\nfor (item of items) {\n  \n  let toDelete = false;\n\n  let type = item.json.type;\n  let data = item.json[type];\n\n  if (!toDelete) {\n    if (data.text.length == 0) {\n      toDelete = true;\n    } else {\n      returnData.json.toDelete = false;\n      break;\n    }\n  }\n\n  returnData.json.toDelete = toDelete;\n}\n\nreturn [returnData];"
      },
      "name": "Process Blocks",
      "type": "n8n-nodes-base.function",
      "position": [
        1660,
        220
      ],
      "typeVersion": 1,
      "id": "548e8bff-00c7-4867-aa40-41ce01b3bd7f"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "name": "SplitInBatches",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1300,
        220
      ],
      "typeVersion": 1,
      "id": "455d2f6c-6bc4-43b3-a402-58c651292d8c"
    },
    {
      "parameters": {
        "functionCode": "for (item of items) {\n\n  let toDelete = false;\n  for (const key in item.json.properties) {\n    let type = item.json.properties[key].type;\n    let data = item.json.properties[key][type];\n    \n    if (!data || data.length == 0) {\n      toDelete = true;\n    } else {\n      toDelete = false;\n      break;\n    }\n  }\n\n  item.json.toDelete = toDelete;\n}\n\nreturn items;"
      },
      "name": "Check for empty properties",
      "type": "n8n-nodes-base.function",
      "position": [
        900,
        240
      ],
      "typeVersion": 1,
      "id": "bbf4a43b-6136-4c83-a531-0c699aa7febf"
    },
    {
      "parameters": {
        "operation": "archive",
        "pageId": "={{$json[\"pageID\"]}}"
      },
      "name": "Archive Page",
      "type": "n8n-nodes-base.notion",
      "position": [
        2060,
        200
      ],
      "typeVersion": 2,
      "id": "5c49529f-f83f-4a8c-a78e-e1aaf4c463e8",
      "credentials": {
        "notionApi": {
          "id": "1",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"toDelete\"]}}",
              "value2": true
            }
          ]
        }
      },
      "name": "If toDelete",
      "type": "n8n-nodes-base.if",
      "position": [
        1860,
        220
      ],
      "typeVersion": 1,
      "id": "57cd6ea5-a3aa-4a48-9ba1-d163e517055c"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"toDelete\"]}}",
              "value2": true
            }
          ]
        }
      },
      "name": "If Empty Properties",
      "type": "n8n-nodes-base.if",
      "position": [
        1060,
        240
      ],
      "typeVersion": 1,
      "id": "4ca8d120-ed3c-48d3-a73c-27176b8f1ff3"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "23d77285-529a-4f3f-8bbb-2b54a8c43e91",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        340,
        240
      ]
    },
    {
      "parameters": {},
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "position": [
        340,
        20
      ],
      "typeVersion": 1,
      "id": "e5e265ce-62cf-4d12-8c68-71765783d284"
    },
    {
      "parameters": {
        "resource": "message",
        "subject": "=n8n Workflow Failure:  {{$json[\"workflow\"][\"name\"]}}",
        "message": "=Workflow: {{$json[\"workflow\"][\"name\"]}}\nError: {{$json[\"execution\"][\"error\"][\"message\"]}}\nLast node executed: {{$json[\"execution\"][\"lastNodeExecuted\"]}}\nExecution URL: {{$json[\"execution\"][\"url\"]}}\nStacktrace:\n{{$json[\"execution\"][\"error\"][\"stack\"]}}",
        "toList": [
          "n8n.prong493@silomails.com"
        ],
        "additionalFields": {}
      },
      "name": "Send error email",
      "type": "n8n-nodes-base.gmail",
      "position": [
        600,
        20
      ],
      "typeVersion": 1,
      "id": "f4529317-dbbf-482c-a7a4-1d6aaaea10ab",
      "credentials": {
        "gmailOAuth2": {
          "id": "6",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2023-04-09T15:35:16.927Z",
      "updatedAt": "2023-04-09T15:35:16.927Z",
      "id": "2",
      "name": "Notion"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2023-04-23T05:47:24.000Z",
  "versionId": "d472d27b-2c71-46c0-a888-881f91fe8e8b"
}